<% layout("/layouts/boilerplate") %>

<style>
    #filters, .filterss{
        display: flex;
        flex-wrap: wrap;   
        align-items: center;  
        justify-content:space-between;  
    }
    
    .filter{
        text-align: center;
        margin-right: 2rem;
        margin-top: 2rem;
        opacity: 0.7;
    }
    .filter:hover{
        opacity: 1;
        cursor: pointer;
    }
    .filter p{
        font-size: 0.8rem;
    }

    .tax-info{
        display: none;
    }

    .tax-toggle{
        border: 1px solid black;
        border-radius: 1rem;
        height: 3.5rem;
        padding: 1rem;
        display: flex;
        align-items: center;
    }
</style>

<div id="filters">
    <div class = filterss>
    <div class="filter">
        <div>
            <i class="fa-solid fa-fire"></i>
        </div> 
        <p>Trending</p> 
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-bed"></i>
        </div> 
        <p>Rooms</p>
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-mountain-city"></i>
        </div> 
        <p>Iconic Cities</p>
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-mountain"></i>
        </div> 
        <p>Mountains</p>
    </div>
    <div class="filter">
        <div>
            <i class="fa-brands fa-fort-awesome"></i>
        </div> 
        <p>Castles</p>
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-person-swimming"></i>
        </div> 
        <p>Amazing Pools</p>
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-campground"></i>
        </div> 
        <p>Camping</p> 
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-cow"></i>
        </div> 
        <p>Farms</p> 
    </div>
    <div class="filter">
        <div>
            <i class="fa-solid fa-snowflake"></i>
        </div> 
        <p>Arctic</p> 
    </div>

    </div>

    <div class="tax-toggle">
        <div class="form-check-reverse form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
            <label class="form-check-label" for="flexSwitchCheckDefault">Display Taxes</label>
        </div>
    </div>
</div>

<div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3">
    <% for(let listing of allListings) { %>
        <a href="/listings/<%=listing._id%>" class="listing-link">

            <div class="card col listing-card" >
                <img src="<%= listing.image.url %>" class="card-img-top" alt="listing_image" style="height: 20rem;">
                <div class="card-img-overlay"></div>
                <div class="card-body">
                    <p class="card-text">
                        <h5><%= listing.title %></h5>
                       <p class="priceinfo">
                           &#8377; <%= listing.price.toLocaleString("en-IN") %> / night
                        </p>
                        <i class="tax-info">&nbsp; +18% GST</i>
                        
                    </p>
                </div>
            </div>
        </a>
        <% } %>
</div>
 
<script>
    let taxSwitch = document.getElementById('flexSwitchCheckDefault');
taxSwitch.addEventListener('click', (e) => {
    // Get all the tax info elements and listings
    let taxInfo = document.getElementsByClassName('tax-info');
    let listings = document.querySelectorAll('.listing-card');

    // If the switch is checked, show the total after taxes
    if (e.target.checked) {
        // Show tax info and update prices
        // for (let info of taxInfo) {
        //     info.style.display = 'inline';
        // }

        listings.forEach(listing => {
            let priceElement = listing.getElementsByClassName('priceinfo')[0];

            if (priceElement) {  // Ensure priceElement exists
                let priceText = priceElement.innerText.trim();

                if (priceText) {
                    // Parse price without tax (remove currency symbol and commas)
                    let priceWithoutTax = parseFloat(priceText.split('₹')[1].replace(/,/g, '').trim());
                    
                    // Calculate tax (18%)
                    let tax = Math.floor(priceWithoutTax * 0.18); // 18% tax
                    let total = priceWithoutTax + tax; // Total price including tax

                    // Update the inner HTML to show the base price and the total price after tax
                    priceElement.innerText = `₹ ${priceWithoutTax.toLocaleString("en-IN")} / night + ₹ ${tax.toLocaleString("en-IN")} GST`;
                    // priceElement.innerHTML = `₹ ${priceWithoutTax.toLocaleString("en-IN")} / night <i class="tax-info">+ ₹ ${tax.toLocaleString("en-IN")} GST</i>`;
                } else {
                    console.error('Price text is empty or undefined!');
                }
            } else {
                console.error('Price element not found!');
            }
        });
    } else {
       
        listings.forEach(listing => {
            let priceElement = listing.getElementsByClassName('priceinfo')[0];
            if (priceElement) {  // Ensure priceElement exists
                let priceText = priceElement.innerText.trim();

                if (priceText) {
                    // Parse price without tax (remove currency symbol and commas)
                    let priceWithoutTax = parseFloat(priceText.split('₹')[1].replace(/,/g, '').trim());

                    // Reset the price to the original price without tax
                    priceElement.innerHTML = `₹ ${priceWithoutTax.toLocaleString("en-IN")} / night`;
                } else {
                    console.error('Price text is empty or undefined!');
                }
            } else {
                console.error('Price element not found!');
            }
        });
    }
});


</script>
